AI 提示詞 for GitHub Copilot - 貪食蛇遊戲 (HTML, CSS, JavaScript)

============================================================
主提示（一次要求產出整個專案）
============================================================
你是 GitHub Copilot，請產生一個完整、可投入正式使用的單頁版貪食蛇遊戲，使用 HTML、CSS 與 JavaScript 製作。
輸出需包含三個檔案：index.html、style.css 和 game.js。
需求如下：

1. 遊戲玩法與機制
   - 使用 HTML <canvas> 繪製畫面。
   - 基於網格的蛇移動（可調整格子大小）。
   - 鍵盤控制：方向鍵與 WASD。
   - 手機觸控控制（螢幕上的方向按鈕 + 滑動偵測）。
   - 食物隨機出現在網格中；吃到食物會讓蛇變長並增加分數。
   - 碰到牆壁或自己身體 = 遊戲結束。
   - 遊戲迴圈使用 requestAnimationFrame，但移動以固定時間間隔執行（可調整 FPS/速度）。
   - 每吃到 N 個食物，速度會稍微提升。
   - 暫停與恢復功能（P 鍵或螢幕按鈕）。
   - 重新開始與新遊戲功能。

2. UI 與使用體驗
   - 響應式版面：Canvas 會自動縮放並維持比例，水平置中。
   - 顯示目前分數與最高分。
   - 使用 localStorage 儲存最高分。
   - 顯示開始 / 暫停 / 遊戲結束的浮層，並附可操作按鈕。
   - 增加簡單的無障礙標籤與 ARIA 屬性。

3. 程式品質與結構
   - 使用現代 ES6+ 語法（const/let、可用 class 或模組，但需可直接開啟 index.html 執行）。
   - 不使用外部函式庫。
   - 程式需有註解，解釋主要函式與常數。
   - 命名一致並模組化。
   - 常數需集中在檔案開頭方便調整（格子大小、起始速度、加速幅度）。
   - 生成食物時需避免與蛇身重疊（簡單隨機演算法）。

4. 美術與設計
   - 使用 CSS（style.css）製作簡潔的外觀。
   - 使用 CSS 變數設定主題顏色。
   - 確保觸控按鈕尺寸夠大且有按壓反饋效果。

5. 額外功能（可選）
   - 加入音效（吃食物、遊戲結束），使用 Web Audio API 或 <audio>（非阻塞）。
   - 處理鍵盤焦點與觸控後備方案。
   - 吃到食物時有小動畫。

輸出需包含三個檔案，並在檔案頂部附註簡短 README（包含執行方式與主要控制方式）。

============================================================
分檔/分任務短提示（給 Copilot 產生單一檔案用）
============================================================
index.html
-----------
產生 index.html，包含：
- 連結 style.css 與 game.js（使用 defer 載入）。
- 置中的容器，內有 Canvas、分數顯示、最高分、開始/暫停/重新開始按鈕，以及手機觸控方向按鈕。
- 設定 meta viewport，並加入基本 ARIA 屬性。

style.css
-----------
產生 style.css：
- 使用 CSS 變數 (--bg, --accent, --snake, --food)。
- 響應式 Canvas 容器（最大寬度 720px），水平置中。
- 開始 / 暫停 / 遊戲結束的浮層使用半透明背景。
- 手機觸控按鈕置於右下或下方中央，並有 :active 狀態。
- 可讀性高的字型大小與焦點外框。

game.js
-----------
產生 game.js：
- 檔案開頭放常數（CELL_SIZE, COLS, ROWS, START_SPEED, SPEED_UP_EVERY）。
- 蛇使用 {x,y} 陣列表示，實作函式：initGame(), spawnFood(), draw(), update(), handleInput(), checkCollision(), gameOver()。
- 移動與繪製分離：requestAnimationFrame 負責繪製，計時器累積時間達固定間隔時才移動。
- 監聽鍵盤（方向鍵 / WASD）與觸控按鈕，禁止反向移動。
- 最高分存入 localStorage 並顯示。
- 簡單音效播放（可選，無音效則忽略）。
- 每個主要區塊都有簡短註解。

============================================================
功能擴充提示
============================================================
觸控滑動（swipe）支持
----------------------
在 Canvas 偵測上/下/左/右滑動，轉換成蛇的移動方向，確保快速滑動可即時反應。

本機高分與分享
----------------
使用 localStorage 儲存最高分，並加入「分享分數」按鈕，複製「我在貪食蛇得到 X 分！」到剪貼簿。

音效
-----
加入兩個短音效（吃食物、遊戲結束），使用 DataURI 或本地檔案，透過 Web Audio API 非阻塞播放。

調整難度與等級
---------------
遊戲開始前可選擇難度（簡單/普通/困難），設定初始速度與加速幅度；每吃 5 個食物升一級並顯示等級指標。

============================================================
產出 commit message / README 提示
============================================================
產生 README.md，摘要專案內容、執行方式（直接開啟 index.html）、操作方式（方向鍵 / WASD / 觸控），以及如何在 game.js 修改常數（CELL_SIZE, START_SPEED）。
同時建議第一個 Git commit 訊息。

============================================================
小技巧（給 Copilot 的限制或偏好）
============================================================
- JS 總行數保持在 600 行以下。
- 不使用外部依賴。
- 註解簡短、清楚。
- 必須能直接雙擊 index.html 執行（無需編譯）。
- 優先使用 drawGrid(), drawSnake(), moveSnake(), placeFood() 等函式名稱。
